version: '3'

services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    image: postgres
    env_file:
      - .env.development.local
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - fbsr_net
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env.development.local
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - fbsr_net
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    env_file:
      - .env.development.local
    ports:
      - "3000:3000"
    networks:
      - fbsr_net
    restart: unless-stopped

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    env_file:
      - .env.development.local
    ports:
      - "3001:3000"
    networks:
      - fbsr_net
    restart: unless-stopped

  caddy:
    image: docker.io/caddy/caddy:latest
    env_file:
      - .env.development.local
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:Z
      - ./backend/static:/static-files:z
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - fbsr_net
    restart: unless-stopped

volumes:
  pgdata:
  caddy_data:
  caddy_config:

networks:
  fbsr_net:
    driver: bridge
